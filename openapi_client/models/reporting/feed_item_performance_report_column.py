# coding: utf-8

"""
    ReportingService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self

class FeedItemPerformanceReportColumn(str, Enum):
    TIMEPERIOD = 'TimePeriod'

    ACCOUNTID = 'AccountId'

    ACCOUNTNAME = 'AccountName'

    ACCOUNTNUMBER = 'AccountNumber'

    CAMPAIGNID = 'CampaignId'

    CAMPAIGNNAME = 'CampaignName'

    ADGROUPID = 'AdGroupId'

    ADID = 'AdId'

    FEEDID = 'FeedId'

    FEEDITEMID = 'FeedItemId'

    IMPRESSIONS = 'Impressions'

    CLICKS = 'Clicks'

    SPEND = 'Spend'

    CTR = 'Ctr'

    AVERAGECPC = 'AverageCpc'

    AVERAGEPOSITION = 'AveragePosition'

    CONVERSIONS = 'Conversions'

    ASSISTS = 'Assists'

    REVENUE = 'Revenue'

    EXTENDEDCOST = 'ExtendedCost'

    CONVERSIONSQUALIFIED = 'ConversionsQualified'

    CONVERSIONRATE = 'ConversionRate'

    COSTPERCONVERSION = 'CostPerConversion'

    RETURNONADSPEND = 'ReturnOnAdSpend'

    COSTPERASSIST = 'CostPerAssist'

    REVENUEPERCONVERSION = 'RevenuePerConversion'

    REVENUEPERASSIST = 'RevenuePerAssist'

    ALLCONVERSIONS = 'AllConversions'

    ALLCONVERSIONSQUALIFIED = 'AllConversionsQualified'

    ALLREVENUE = 'AllRevenue'

    ALLCOSTPERCONVERSION = 'AllCostPerConversion'

    ALLCONVERSIONRATE = 'AllConversionRate'

    ALLREVENUEPERCONVERSION = 'AllRevenuePerConversion'

    ALLRETURNONADSPEND = 'AllReturnOnAdSpend'

    VIEWTHROUGHCONVERSIONS = 'ViewThroughConversions'

    VIEWTHROUGHCONVERSIONSQUALIFIED = 'ViewThroughConversionsQualified'

    VIEWTHROUGHREVENUE = 'ViewThroughRevenue'

    VIEWTHROUGHCONVERSIONRATE = 'ViewThroughConversionRate'

	
    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of FeedItemPerformanceReportColumn from a JSON string"""
        return cls(json.loads(json_str))


