# coding: utf-8

"""
    ReportingService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self

class AppsPerformanceReportColumn(str, Enum):
    TIMEPERIOD = 'TimePeriod'

    ACCOUNTID = 'AccountId'

    ACCOUNTNAME = 'AccountName'

    ACCOUNTNUMBER = 'AccountNumber'

    ACCOUNTSTATUS = 'AccountStatus'

    CAMPAIGNID = 'CampaignId'

    CAMPAIGNNAME = 'CampaignName'

    CAMPAIGNSTATUS = 'CampaignStatus'

    ASSETGROUPID = 'AssetGroupId'

    ASSETGROUPNAME = 'AssetGroupName'

    ASSETGROUPSTATUS = 'AssetGroupStatus'

    CURRENCYCODE = 'CurrencyCode'

    LANGUAGE = 'Language'

    BIDSTRATEGYTYPE = 'BidStrategyType'

    GOAL = 'Goal'

    GOALTYPE = 'GoalType'

    IMPRESSIONS = 'Impressions'

    CLICKS = 'Clicks'

    CTR = 'Ctr'

    AVERAGECPC = 'AverageCpc'

    SPEND = 'Spend'

    AVERAGECPM = 'AverageCpm'

    ALLCONVERSIONS = 'AllConversions'

    ALLCOSTPERCONVERSION = 'AllCostPerConversion'

    ALLCONVERSIONRATE = 'AllConversionRate'

    CONVERSIONS = 'Conversions'

    CONVERSIONRATE = 'ConversionRate'

    COSTPERCONVERSION = 'CostPerConversion'

    VIEWTHROUGHCONVERSIONS = 'ViewThroughConversions'

    VIEWTHROUGHCONVERSIONRATE = 'ViewThroughConversionRate'

    VIEWTHROUGHCOSTPERCONVERSION = 'ViewThroughCostPerConversion'

    DOWNLOADS = 'Downloads'

    POSTCLICKDOWNLOADRATE = 'PostClickDownloadRate'

    COSTPERDOWNLOAD = 'CostPerDownload'

    APPINSTALLS = 'AppInstalls'

    POSTCLICKINSTALLRATE = 'PostClickInstallRate'

    CPI = 'CPI'

    PURCHASES = 'Purchases'

    POSTINSTALLPURCHASERATE = 'PostInstallPurchaseRate'

    CPP = 'CPP'

    SUBSCRIPTIONS = 'Subscriptions'

    POSTINSTALLSUBSCRIPTIONRATE = 'PostInstallSubscriptionRate'

    CPS = 'CPS'

    REVENUE = 'Revenue'

    RETURNONADSPEND = 'ReturnOnAdSpend'

    REVENUEPERDOWNLOAD = 'RevenuePerDownload'

    REVENUEPERAPPINSTALL = 'RevenuePerAppInstall'

	
    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of AppsPerformanceReportColumn from a JSON string"""
        return cls(json.loads(json_str))


