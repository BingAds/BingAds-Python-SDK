# coding: utf-8

"""
    ReportingService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self

class ShareOfVoiceReportColumn(str, Enum):
    ACCOUNTNAME = 'AccountName'

    TIMEPERIOD = 'TimePeriod'

    CAMPAIGNNAME = 'CampaignName'

    ADGROUPNAME = 'AdGroupName'

    KEYWORD = 'Keyword'

    DELIVEREDMATCHTYPE = 'DeliveredMatchType'

    BIDMATCHTYPE = 'BidMatchType'

    LANGUAGE = 'Language'

    ACCOUNTNUMBER = 'AccountNumber'

    ACCOUNTID = 'AccountId'

    KEYWORDID = 'KeywordId'

    ADGROUPID = 'AdGroupId'

    CAMPAIGNID = 'CampaignId'

    IMPRESSIONS = 'Impressions'

    CLICKS = 'Clicks'

    CTR = 'Ctr'

    AVERAGECPC = 'AverageCpc'

    SPEND = 'Spend'

    AVERAGEPOSITION = 'AveragePosition'

    IMPRESSIONSHAREPERCENT = 'ImpressionSharePercent'

    IMPRESSIONLOSTTOBUDGETPERCENT = 'ImpressionLostToBudgetPercent'

    IMPRESSIONLOSTTORANKAGGPERCENT = 'ImpressionLostToRankAggPercent'

    CURRENTMAXCPC = 'CurrentMaxCpc'

    QUALITYSCORE = 'QualityScore'

    EXPECTEDCTR = 'ExpectedCtr'

    ADRELEVANCE = 'AdRelevance'

    LANDINGPAGEEXPERIENCE = 'LandingPageExperience'

    CONVERSIONS = 'Conversions'

    CONVERSIONRATE = 'ConversionRate'

    COSTPERCONVERSION = 'CostPerConversion'

    ADDISTRIBUTION = 'AdDistribution'

    CLICKSHAREPERCENT = 'ClickSharePercent'

    DEVICETYPE = 'DeviceType'

    NETWORK = 'Network'

    ACCOUNTSTATUS = 'AccountStatus'

    CAMPAIGNSTATUS = 'CampaignStatus'

    ADGROUPSTATUS = 'AdGroupStatus'

    KEYWORDSTATUS = 'KeywordStatus'

    BIDSTRATEGYTYPE = 'BidStrategyType'

    KEYWORDLABELS = 'KeywordLabels'

    EXACTMATCHIMPRESSIONSHAREPERCENT = 'ExactMatchImpressionSharePercent'

    TOPIMPRESSIONSHARELOSTTORANKPERCENT = 'TopImpressionShareLostToRankPercent'

    TOPIMPRESSIONSHARELOSTTOBUDGETPERCENT = 'TopImpressionShareLostToBudgetPercent'

    ABSOLUTETOPIMPRESSIONSHARELOSTTORANKPERCENT = 'AbsoluteTopImpressionShareLostToRankPercent'

    ABSOLUTETOPIMPRESSIONSHARELOSTTOBUDGETPERCENT = 'AbsoluteTopImpressionShareLostToBudgetPercent'

    ABSOLUTETOPIMPRESSIONSHAREPERCENT = 'AbsoluteTopImpressionSharePercent'

    TOPIMPRESSIONSHAREPERCENT = 'TopImpressionSharePercent'

    ABSOLUTETOPIMPRESSIONRATEPERCENT = 'AbsoluteTopImpressionRatePercent'

    TOPIMPRESSIONRATEPERCENT = 'TopImpressionRatePercent'

    BASECAMPAIGNID = 'BaseCampaignId'

    ALLCONVERSIONS = 'AllConversions'

    ALLCONVERSIONRATE = 'AllConversionRate'

    ALLCOSTPERCONVERSION = 'AllCostPerConversion'

    VIEWTHROUGHCONVERSIONS = 'ViewThroughConversions'

    GOAL = 'Goal'

    GOALTYPE = 'GoalType'

    AVERAGECPM = 'AverageCpm'

    CONVERSIONSQUALIFIED = 'ConversionsQualified'

    ALLCONVERSIONSQUALIFIED = 'AllConversionsQualified'

    VIEWTHROUGHCONVERSIONSQUALIFIED = 'ViewThroughConversionsQualified'

    VIEWTHROUGHREVENUE = 'ViewThroughRevenue'

	
    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ShareOfVoiceReportColumn from a JSON string"""
        return cls(json.loads(json_str))


