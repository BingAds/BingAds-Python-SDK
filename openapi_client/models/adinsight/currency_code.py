# coding: utf-8

"""
    AdInsightService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self

class CurrencyCode(str, Enum):
    AED = 'AED'

    ALL = 'ALL'

    AMD = 'AMD'

    ARS = 'ARS'

    AUD = 'AUD'

    AZM = 'AZM'

    BGL = 'BGL'

    BHD = 'BHD'

    BND = 'BND'

    BOB = 'BOB'

    BRL = 'BRL'

    BYB = 'BYB'

    BZD = 'BZD'

    CAD = 'CAD'

    CHF = 'CHF'

    CLP = 'CLP'

    CNY = 'CNY'

    COP = 'COP'

    CRC = 'CRC'

    CZK = 'CZK'

    DOP = 'DOP'

    DKK = 'DKK'

    DZD = 'DZD'

    EEK = 'EEK'

    EGP = 'EGP'

    EUR = 'EUR'

    GBP = 'GBP'

    GEL = 'GEL'

    GTQ = 'GTQ'

    HKD = 'HKD'

    HNL = 'HNL'

    HRK = 'HRK'

    HUF = 'HUF'

    IDR = 'IDR'

    ILS = 'ILS'

    INR = 'INR'

    IQD = 'IQD'

    IRR = 'IRR'

    ISK = 'ISK'

    JMD = 'JMD'

    JOD = 'JOD'

    JPY = 'JPY'

    KES = 'KES'

    KGS = 'KGS'

    KRW = 'KRW'

    KWD = 'KWD'

    KZT = 'KZT'

    LBP = 'LBP'

    LTL = 'LTL'

    LVL = 'LVL'

    LYD = 'LYD'

    MAD = 'MAD'

    MKD = 'MKD'

    MOP = 'MOP'

    MNT = 'MNT'

    MVR = 'MVR'

    MXN = 'MXN'

    MYR = 'MYR'

    NIO = 'NIO'

    NOK = 'NOK'

    NZD = 'NZD'

    OMR = 'OMR'

    PAB = 'PAB'

    PEN = 'PEN'

    PHP = 'PHP'

    PKR = 'PKR'

    PLN = 'PLN'

    PYG = 'PYG'

    QAR = 'QAR'

    ROL = 'ROL'

    RUR = 'RUR'

    SAR = 'SAR'

    SEK = 'SEK'

    SGD = 'SGD'

    SIT = 'SIT'

    SKK = 'SKK'

    SYP = 'SYP'

    THB = 'THB'

    TND = 'TND'

    TRY = 'TRY'

    TTD = 'TTD'

    TWD = 'TWD'

    UAH = 'UAH'

    USD = 'USD'

    UYU = 'UYU'

    UZS = 'UZS'

    VEF = 'VEF'

    YER = 'YER'

    VND = 'VND'

    YUN = 'YUN'

    ZAR = 'ZAR'

    ZWD = 'ZWD'

	
    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CurrencyCode from a JSON string"""
        return cls(json.loads(json_str))


