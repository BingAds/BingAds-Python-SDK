# coding: utf-8

"""
    AdInsightService

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self

class Currency(str, Enum):
    UNSPECIFY = 'UnSpecify'

    AUSTRALIANDOLLAR = 'AustralianDollar'

    BRAZILIANREAL = 'BrazilianReal'

    CANADIANDOLLAR = 'CanadianDollar'

    SWISSFRANC = 'SwissFranc'

    DANISHKRONE = 'DanishKrone'

    EURO = 'EURO'

    UKPOUND = 'UKPound'

    JAPANESEYEN = 'JapaneseYen'

    NORWEGIANKRONE = 'NorwegianKrone'

    NEWZEALANDDOLLAR = 'NewZealandDollar'

    SWEDISHKRONA = 'SwedishKrona'

    USDOLLAR = 'USDollar'

    SOUTHAFRICANRAND = 'SouthAfricanRand'

    ARGENTINEPESO = 'ArgentinePeso'

    CHILEANPESO = 'ChileanPeso'

    YUANRENMINBI = 'YuanRenminbi'

    COLOMBIANPESO = 'ColombianPeso'

    CZECHKORUNA = 'CzechKoruna'

    UAEDIRHAM = 'UAEDirham'

    ALGERIANDINAR = 'AlgerianDinar'

    EGYPTIANPOUND = 'EgyptianPound'

    HONGKONGDOLLAR = 'HongKongDollar'

    FORINT = 'Forint'

    RUPIAH = 'Rupiah'

    ISRAELISHEQEL = 'IsraeliSheqel'

    INDIANRUPEE = 'IndianRupee'

    WON = 'Won'

    LEBANESEPOUND = 'LebanesePound'

    MOROCCANDIRHAM = 'MoroccanDirham'

    MEXICANPESO = 'MexicanPeso'

    MALAYSIANRINGGIT = 'MalaysianRinggit'

    NUEVOSOL = 'NuevoSol'

    PHILIPPINEPESO = 'PhilippinePeso'

    POLISHZLOTY = 'PolishZloty'

    QATARIRIAL = 'QatariRial'

    SAUDIRIYAL = 'SaudiRiyal'

    SINGAPOREDOLLAR = 'SingaporeDollar'

    BAHT = 'Baht'

    NEWTAIWANDOLLAR = 'NewTaiwanDollar'

    BOLIVAR = 'Bolivar'

    DONG = 'Dong'

    TURKISHLIRA = 'TurkishLira'

    NIGERIANNAIRA = 'NigerianNaira'

	
    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Currency from a JSON string"""
        return cls(json.loads(json_str))


